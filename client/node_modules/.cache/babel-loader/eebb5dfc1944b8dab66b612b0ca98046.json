{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import queryString from 'query-string';\n// import io from \"socket.io-client\";\n// import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n// import './Chat.css';\n// const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n// let socket;\n// const Chat = ({ location }) => {\n//   const [name, setName] = useState('');\n//   const [room, setRoom] = useState('');\n//   const [users, setUsers] = useState('');\n//   const [message, setMessage] = useState('');\n//   const [messages, setMessages] = useState([]);\n//   useEffect(() => {\n//     const { name, room } = queryString.parse(location.search);\n//     socket = io(ENDPOINT);\n//     setRoom(room);\n//     setName(name)\n//     socket.emit('join', { name, room }, (error) => {\n//       if(error) {\n//         alert(error);\n//       }\n//     });\n//   }, [ENDPOINT, location.search]);\n//   useEffect(() => {\n//     socket.on('message', message => {\n//       setMessages(messages => [ ...messages, message ]);\n//     });\n//     socket.on(\"roomData\", ({ users }) => {\n//       setUsers(users);\n//     });\n// }, []);\n//   const sendMessage = (event) => {\n//     event.preventDefault();\n//     if(message) {\n//       socket.emit('sendMessage', message, () => setMessage(''));\n//     }\n//   }\n//   return (\n//     <div className=\"outerContainer\">\n//       <div className=\"container\">\n//           <InfoBar room={room} />\n//           <Messages messages={messages} name={name} />\n//           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\n//       </div>\n//       <TextContainer users={users}/>\n//     </div>\n//   );\n// }\n// export default Chat;","map":{"version":3,"sources":["C:\\Users\\Yaser\\Desktop\\chat-app\\client\\src\\components\\Chat\\Chat.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { useState, useEffect } from \"react\";\r\n// import queryString from 'query-string';\r\n// import io from \"socket.io-client\";\r\n\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n// import Messages from '../Messages/Messages';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n\r\n// import './Chat.css';\r\n\r\n// const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\n// let socket;\r\n\r\n// const Chat = ({ location }) => {\r\n//   const [name, setName] = useState('');\r\n//   const [room, setRoom] = useState('');\r\n//   const [users, setUsers] = useState('');\r\n//   const [message, setMessage] = useState('');\r\n//   const [messages, setMessages] = useState([]);\r\n\r\n//   useEffect(() => {\r\n//     const { name, room } = queryString.parse(location.search);\r\n\r\n//     socket = io(ENDPOINT);\r\n\r\n//     setRoom(room);\r\n//     setName(name)\r\n\r\n//     socket.emit('join', { name, room }, (error) => {\r\n//       if(error) {\r\n//         alert(error);\r\n//       }\r\n//     });\r\n//   }, [ENDPOINT, location.search]);\r\n  \r\n//   useEffect(() => {\r\n//     socket.on('message', message => {\r\n//       setMessages(messages => [ ...messages, message ]);\r\n//     });\r\n    \r\n//     socket.on(\"roomData\", ({ users }) => {\r\n//       setUsers(users);\r\n//     });\r\n// }, []);\r\n\r\n//   const sendMessage = (event) => {\r\n//     event.preventDefault();\r\n\r\n//     if(message) {\r\n//       socket.emit('sendMessage', message, () => setMessage(''));\r\n//     }\r\n//   }\r\n\r\n//   return (\r\n//     <div className=\"outerContainer\">\r\n//       <div className=\"container\">\r\n//           <InfoBar room={room} />\r\n//           <Messages messages={messages} name={name} />\r\n//           <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n//       </div>\r\n//       <TextContainer users={users}/>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Chat;\r\n"]},"metadata":{},"sourceType":"module"}